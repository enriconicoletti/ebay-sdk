100
<classHistory><id hierarchicalHash="16ad0c090"><classId hash="2174638363"><name><name>com/ebay/EbaySdk$ClientIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="181989afb"><classId hash="2556834694"><name><name>com/ebay/EbaySdk$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ee3beed"><classId hash="249806573"><name><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="181b79149"><classId hash="2558863828"><name><name>com/ebay/EbaySdk$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f594e45"><classId hash="2673430085"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6a5adef2"><classId hash="1784340210"><name><name>com/ebay/shopping/categories/models/AckCodeType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="64cb3b4c"><classId hash="1691040588"><name><name>com/ebay/clients/models/EbayError</name></name></classId></id><coverageId>18dcc0be4</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b268f7be"><classId hash="3375796297"><name><name>com/ebay/EbaySdk$CredentialsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7c210726"><classId hash="2082539302"><name><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1cb3e503"><classId hash="481551619"><name><name>com/ebay/sell/account/policies/clients/ReturnPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8a229d80"><classId hash="2317524352"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/InventoryItemGroupClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab2654d"><classId hash="179463501"><name><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImplTest</name></name></classId></id><coverageId>ab2654d</coverageId></classHistory>
<classHistory><id hierarchicalHash="12b84c4bf"><classId hash="1112694090"><name><name>com/ebay/EbaySdk$ClientSecretStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b67a181c"><classId hash="664077225"><name><name>com/ebay/models/RequestRetryConfiguration$Steps</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="e8a85b0d"><classId hash="1505969818"><name><name>com/ebay/models/RequestRetryConfiguration$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="27614e46"><classId hash="660688454"><name><name>com/ebay/identity/oauth2/token/models/Token</name></name></classId></id><coverageId>419863137</coverageId></classHistory>
<classHistory><id hierarchicalHash="b7d19fa1"><classId hash="2021595366"><name><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></name></classId></id><coverageId>1c0a6afc6</coverageId></classHistory>
<classHistory><id hierarchicalHash="8bb1fb6d"><classId hash="2343697261"><name><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="41509f3"><classId hash="68487667"><name><name>com/ebay/exceptions/EbayErrorResponseException</name></name></classId></id><coverageId>303def6e2</coverageId></classHistory>
<classHistory><id hierarchicalHash="c34c8fa4"><classId hash="3276574628"><name><name>com/ebay/exceptions/EbayException</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="18758da34"><classId hash="2653319871"><name><name>com/ebay/EbaySdk$SandboxStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13f8ba384"><classId hash="2963705617"><name><name>com/ebay/models/RequestRetryConfiguration$MininumWaitStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1bf11f3ca"><classId hash="3216394610"><name><name>com/ebay/sell/account/policies/models/PolicyCategoryType$Name</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="4cb15e15"><classId hash="1286692373"><name><name>com/ebay/shopping/categories/clients/impl/CategoryClientImplTest</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0b19745"><classId hash="3164376402"><name><name>com/ebay/exceptions/EbayNotFoundResponseException</name></name></classId></id><coverageId>2107eb605</coverageId></classHistory>
<classHistory><id hierarchicalHash="d5e23842"><classId hash="3588372546"><name><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="218ce73d"><classId hash="562882365"><name><name>com/ebay/sell/account/policies/clients/PaymentPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e27556cc"><classId hash="2736967697"><name><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></name></classId></id><coverageId>f2cdb628</coverageId></classHistory>
<classHistory><id hierarchicalHash="45417868"><classId hash="1161918568"><name><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="35c73832"><classId hash="902248498"><name><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></name></classId></id><coverageId>21b885bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="f1cf8e69"><classId hash="4056911465"><name><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImplTest</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="13e6dc89e"><classId hash="4279976419"><name><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></name></classId></id><coverageId>14b9b03c3</coverageId></classHistory>
<classHistory><id hierarchicalHash="69d00dbb"><classId hash="1775242683"><name><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="20ca8d44"><classId hash="550145348"><name><name>com/ebay/sell/inventory/locations/clients/InventoryLocationClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6fdac034"><classId hash="814233977"><name><name>com/ebay/clients/impl/EbayClientImpl$1</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="4bd45113"><classId hash="209832536"><name><name>com/ebay/clients/impl/EbayClientImpl$2</name></name></classId></id><coverageId>113881428</coverageId></classHistory>
<classHistory><id hierarchicalHash="75fa44c4"><classId hash="916962825"><name><name>com/ebay/clients/impl/EbayClientImpl$3</name></name></classId></id><coverageId>1eec63046</coverageId></classHistory>
<classHistory><id hierarchicalHash="13127b66a"><classId hash="4057280431"><name><name>com/ebay/clients/impl/EbayClientImpl$4</name></name></classId></id><coverageId>11eaf279c</coverageId></classHistory>
<classHistory><id hierarchicalHash="1cb5c46c"><classId hash="481674348"><name><name>com/ebay/sell/inventory/offers/models/Tax</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7a85d35a"><classId hash="2055590746"><name><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImplTest</name></name></classId></id><coverageId>7a85d35a</coverageId></classHistory>
<classHistory><id hierarchicalHash="13966eeb5"><classId hash="4195641338"><name><name>com/ebay/clients/impl/EbayClientImpl$5</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="106a36f3f"><classId hash="2008963788"><name><name>com/ebay/models/RequestRetryConfiguration$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19856c3e"><classId hash="428174398"><name><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="abd1f88f"><classId hash="2882664591"><name><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="21b885bf"><classId hash="565740991"><name><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImplTest</name></name></classId></id><coverageId>21b885bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="48fb2080"><classId hash="162044357"><name><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></name></classId></id><coverageId>1c2e4bed2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a5d322bb"><classId hash="3164650310"><name><name>com/ebay/EbaySdk$Steps</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ffe9a1b"><classId hash="805214747"><name><name>com/ebay/sell/inventory/offers/models/Amount</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d1a7c115"><classId hash="3517432085"><name><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f410a70e"><classId hash="4094732046"><name><name>com/ebay/sell/inventory/offers/models/Listing</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="4dce00d1"><classId hash="1305346257"><name><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4057d7e8"><classId hash="1079498728"><name><name>com/ebay/clients/models/ErrorResponse</name></name></classId></id><coverageId>2b72d98cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="1241aba63"><classId hash="988304110"><name><name>com/ebay/EbaySdk$ShoppingUriStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8270ce83"><classId hash="2188430979"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImplTest</name></name></classId></id><coverageId>8270ce83</coverageId></classHistory>
<classHistory><id hierarchicalHash="b79c3c5a"><classId hash="3080469594"><name><name>com/ebay/sell/inventory/offers/models/Offer</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="e7a7a95a"><classId hash="3886524762"><name><name>com/ebay/sell/inventory/inventoryitems/clients/InventoryItemClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="74939eee"><classId hash="1955831534"><name><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></name></classId></id><coverageId>11dc68e7e</coverageId></classHistory>
<classHistory><id hierarchicalHash="ff5baa58"><classId hash="4284197464"><name><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></name></classId></id><coverageId>12d3fe57c</coverageId></classHistory>
<classHistory><id hierarchicalHash="5ffccb93"><classId hash="548029656"><name><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></name></classId></id><coverageId>e0f8004d</coverageId></classHistory>
<classHistory><id hierarchicalHash="1116b56"><classId hash="17918806"><name><name>com/ebay/identity/oauth2/token/clients/TokenClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="44b0a491"><classId hash="1152427153"><name><name>com/ebay/shopping/categories/clients/CategoryClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e7919c10"><classId hash="3885079568"><name><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f1a60fa"><classId hash="1483736643"><name><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="b7b67694"><classId hash="2019815385"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></name></classId></id><coverageId>15385feec</coverageId></classHistory>
<classHistory><id hierarchicalHash="b8b19921"><classId hash="3098646817"><name><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="782f2484"><classId hash="2016355460"><name><name>com/ebay/shopping/categories/models/CategoryType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="d1153069"><classId hash="3507826793"><name><name>com/ebay/EbaySdkTest</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="e9326775"><classId hash="3912394613"><name><name>com/ebay/EbaySdk</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5339bec"><classId hash="1716422521"><name><name>com/ebay/models/RequestRetryConfiguration$TimeoutStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab28cc07"><classId hash="2871577607"><name><name>com/ebay/shopping/categories/models/SeverityCodeType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="94f3dc38"><classId hash="2499009592"><name><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></name></classId></id><coverageId>14b9b03c3</coverageId></classHistory>
<classHistory><id hierarchicalHash="c92ba7ac"><classId hash="2312708337"><name><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></name></classId></id><coverageId>fee0c6a4</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef917f5d"><classId hash="4019289949"><name><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImplTest</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="9d327824"><classId hash="2637330468"><name><name>com/ebay/clients/models/EbayParameter</name></name></classId></id><coverageId>9bfc7d7b</coverageId></classHistory>
<classHistory><id hierarchicalHash="647ee577"><classId hash="1686037879"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ee51473"><classId hash="2397377651"><name><name>com/ebay/models/RequestRetryConfiguration</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="21c51721"><classId hash="566564641"><name><name>com/ebay/shopping/categories/models/CategoryArrayType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="21b60ee2"><classId hash="565579490"><name><name>com/ebay/identity/oauth2/token/models/UserToken</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="c2245296"><classId hash="3257160342"><name><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></name></classId></id><coverageId>7a85d35a</coverageId></classHistory>
<classHistory><id hierarchicalHash="36aa5ab7"><classId hash="917134007"><name><name>com/ebay/shopping/categories/models/AbstractResponseType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="3f5286bb"><classId hash="1062373051"><name><name>com/ebay/clients/impl/EbayClientImpl</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="27cdc213"><classId hash="667795987"><name><name>com/ebay/sell/inventory/locations/models/Location</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8849ea1d"><classId hash="2286545437"><name><name>com/ebay/shopping/categories/models/ErrorType</name></name></classId></id><coverageId>4cb15e15</coverageId></classHistory>
<classHistory><id hierarchicalHash="8d6f3925"><classId hash="2372876581"><name><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></name></classId></id><coverageId>dbc795b6</coverageId></classHistory>
<classHistory><id hierarchicalHash="773f32e1"><classId hash="2000630497"><name><name>com/ebay/sell/inventory/offers/models/Offers</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="ee80fec4"><classId hash="4001431236"><name><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<classHistory><id hierarchicalHash="7050f522"><classId hash="1884353826"><name><name>com/ebay/sell/inventory/locations/models/Address</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9bfc7d7b"><classId hash="2617015675"><name><name>com/ebay/exceptions/EbayErrorResponseExceptionTest</name></name></classId></id><coverageId>9bfc7d7b</coverageId></classHistory>
<classHistory><id hierarchicalHash="1df3aaa2"><classId hash="502508194"><name><name>com/ebay/models/MarketplaceTest</name></name></classId></id><coverageId>1df3aaa2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1cc98ccae"><classId hash="3815138617"><name><name>com/ebay/EbaySdk$CodeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13429dafb"><classId hash="1257730950"><name><name>com/ebay/EbaySdk$RequestRetryConfigurationStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7b12f12d"><classId hash="2064838957"><name><name>com/ebay/sell/account/policies/clients/FulfillmentPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e9747e37"><classId hash="3916725815"><name><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8569ea9"><classId hash="3629555369"><name><name>com/ebay/models/Marketplace</name></name></classId></id><coverageId>197e4ee33</coverageId></classHistory>
<classHistory><id hierarchicalHash="49bebcdd"><classId hash="1237236957"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></name></classId></id><coverageId>8270ce83</coverageId></classHistory>
<classHistory><id hierarchicalHash="95137641"><classId hash="2501080641"><name><name>com/ebay/sell/inventory/offers/clients/OfferClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2dcb963b"><classId hash="768316987"><name><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImplTest</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<classHistory><id hierarchicalHash="fe2cfe4"><classId hash="266522596"><name><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImplTest</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b29fbbb"><classId hash="992607163"><name><name>com/ebay/shopping/categories/models/ErrorParameterType</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b5e56e78"><classId hash="3051712120"><name><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItem</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getRefreshToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/ebay/EbaySdk$ClientIdStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/EbaySdk;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/EbaySdk;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withBaseUri</name></method><methodDesc>(Ljava/net/URI;)Lcom/ebay/EbaySdk$ShoppingUriStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withClientId</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$ClientSecretStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withClientSecret</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$CredentialsStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withCode</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$RequestRetryConfigurationStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRefreshToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$RequestRetryConfigurationStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRefreshTokenAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRequestRetryConfiguration</name></method><methodDesc>(Lcom/ebay/models/RequestRetryConfiguration;)Lcom/ebay/EbaySdk$SandboxStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRuName</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$CodeStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withShoppingUri</name></method><methodDesc>(Ljava/net/URI;)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayPhIdWhenRetrievingMarketplaceThenReturnPhilippinesMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getShoppingSiteId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenAustraliaMarketPlaceWhenRetrievingShoppingSiteIdThenReturn15(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getSupportedLocale</name></method><methodDesc>()Ljava/util/Locale;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenUnitedStatesMarketplaceWhenRetrievingSupportedLocaleThenReturnEnUs(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>lambda$toEnum$0</name></method><methodDesc>(Ljava/lang/String;Lcom/ebay/models/Marketplace;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayPhIdWhenRetrievingMarketplaceThenReturnPhilippinesMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/models/Marketplace;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayPhIdWhenRetrievingMarketplaceThenReturnPhilippinesMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/models/Marketplace;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayPhIdWhenRetrievingMarketplaceThenReturnPhilippinesMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getFulfillmentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getPaymentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></clazz><method><name>isDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutCategoryTypeWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutCategoryTypeWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getReturnPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>createInventoryLocation</name></method><methodDesc>(Lcom/ebay/sell/inventory/locations/models/InventoryLocation;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>createOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryItem</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItems</name></method><methodDesc>(II)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItems;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getOfferBySku</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>publishOffer</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateInventoryItem</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateInventoryItemGroup</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>buildResponseRetryer</name></method><methodDesc>()Lcom/github/rholder/retry/Retryer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>buildResponseRetryer</name></method><methodDesc>()Lcom/github/rholder/retry/Retryer;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>delete</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>get</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>getUserToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>invokeResponseCallable</name></method><methodDesc>(Ljava/util/concurrent/Callable;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>post</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Object;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>put</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Object;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getAvailableQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getCategoryId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getFormat</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListing</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Listing;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListingDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListingPolicies</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/ListingPolicies;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getMerchantLocationKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getOfferId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getPricingSummary</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/PricingSummary;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getQuantityLimitPerBuyer</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getStoreCategoryNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getTax</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Tax;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryThenReturnNullCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryChildrenThenReturnConsumerElectronicsCategoryAndAllOfItsChildrenCategories(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryChildrenThenReturnConsumerElectronicsCategoryAndAllOfItsChildrenCategories(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isCategoryInvalidOnCurrentSite</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryThenReturnNullCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isCategoryInvalidOnCurrentSite</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isCategoryInvalidOnCurrentSite</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isSuccess</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isSuccess</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getAspects</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getBrand</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getEan</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getImageUrls</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getIsbn</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getMpn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getSubtitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getUpc</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryIDPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryLevel</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryNamePath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryParentID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryParentName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getItemCount</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>isLeafCategory</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingFulfillmentPoliciesThenReturnFulfillmentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingReturnPoliciesThenReturnReturnPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$1</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$1</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$1</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutDefaultPolicyWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorClassification</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryThenReturnNullCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getLongMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getSeverityCode</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getShortMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>isUserDisplayHint</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>createOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenCreatingOfferThenReturn201StatusCodeAndOfferId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOfferBySku</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>publishOffer</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>updateOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenUpdatingOfferThenReturn204StatusCode(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getAck</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getBuild</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getCorrelationID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getTimestamp</name></method><methodDesc>()Ljavax/xml/datatype/XMLGregorianCalendar;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getAddressLine1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getAddressLine2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCity</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCounty</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getPostalCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getStateOrProvince</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getImageUrls</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getInventoryItemGroupKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getSubtitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getVariantSKUs</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getVariesBy</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitemgroups/models/VariesBy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getDomain</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getErrorId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getSubdomain</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getAvailability</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Availability;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getCondition</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getConditionDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getPackageWeightAndSize</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getProduct</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Product;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getHref</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getLimit</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getNext</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getOffers</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>deleteInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenDeletingInventoryItemGroupThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenRetrievingInventoryItemGroupThenReturnInventoryItemGroup(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenRetrievingInventoryItemGroupThenReturnInventoryItemGroup(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>updateInventoryItemGroup</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getAccessToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getExpiresIn</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getRefreshToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getRefreshTokenExpiresIn</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getTokenType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildErrors</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/util/List;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildErrors</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/util/List;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="11" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildMessage</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>getStatusCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getMininumWaitDuration</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="50" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getMininumWaitUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getTimeoutDuration</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="50" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getTimeoutUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/ebay/models/RequestRetryConfiguration$MininumWaitStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getHref</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getInventoryItems</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getLimit</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getNext</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>getAccessToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>getAccessToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>postForm</name></method><methodDesc>(Ljavax/ws/rs/core/Form;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>refreshAccessToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>refreshAccessToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>deleteInventoryItem</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getInventoryItem</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getInventoryItems</name></method><methodDesc>(II)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItems;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeLimitAndSomeOffsetWhenRetrievingInventoryItemsThenReturnInventoryItems(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>updateInventoryItem</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getHeight</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getLength</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getUnit</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getWidth</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryArray</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/CategoryArrayType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryCount</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getUpdateTime</name></method><methodDesc>()Ljavax/xml/datatype/XMLGregorianCalendar;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>deleteInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenDeletingInventoryLocationThenReturn200StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenRetrievingInventoryLocationThenReturnInventoryLocation(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenRetrievingInventoryLocationThenReturnInventoryLocation(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenDeletingInventoryLocationThenReturn200StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getLocation</name></method><methodDesc>()Lcom/ebay/sell/inventory/locations/models/Location;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getMerchantLocationKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getMerchantLocationStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getFulfillmentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getPaymentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getReturnPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getListingId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getListingStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getSoldQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>hasErrors</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>hasErrors</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/models/RequestRetryConfiguration;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>withMininumWait</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)Lcom/ebay/models/RequestRetryConfiguration$TimeoutStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>withTimeout</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)Lcom/ebay/models/RequestRetryConfiguration$BuildStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/ebay/identity/oauth2/token/clients/TokenClient;Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>refreshToken</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingOfferThenRefreshAccessTokenAndReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getDimensions</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Dimension;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getPackageType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getWeight</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Weight;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingOfferThenRefreshAccessTokenAndReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenPublishingOfferThenThrowNewEbayErrorException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidOfferIdWhenPublishingOfferThenThrowNewEbayErrorException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemAndExpiredAccessTokenWhenCreatingInventoryLocationThenRefreshAcessTokenAndUpdateInventoryItemAndReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemAndExpiredAccessTokenWhenUpdatingInventoryItemGroupThenRefreshAcessTokenAndUpdateInventoryItemAndReturn204StatusCode(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>getThirdPartyTaxCategory</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>getVatPercentage</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>isApplyTax</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withSandbox</name></method><methodDesc>(Z)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withSandbox</name></method><methodDesc>(Z)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>getCurrency</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>getAspectsImageVariesBy</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>getSpecifications</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>getUnit</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayParameter</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayParameter</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>getValues</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryArrayType</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryArrayType</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorParameterType</name></clazz><method><name>getParamID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorParameterType</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$5</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="50" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$5</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="50" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>getShipToLocationAvailability</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>getPrice</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Amount;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Location</name></clazz><method><name>getAddress</name></method><methodDesc>()Lcom/ebay/sell/inventory/locations/models/Address;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>getQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
