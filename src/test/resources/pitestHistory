115
<classHistory><id hierarchicalHash="b6e22057"><classId hash="3068272727"><name><name>com/ebay/sell/inventory/offers/models/PricingSummaryTest</name></name></classId></id><coverageId>b6e22057</coverageId></classHistory>
<classHistory><id hierarchicalHash="16ad0c090"><classId hash="2174638363"><name><name>com/ebay/EbaySdk$ClientIdStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="181989afb"><classId hash="2556834694"><name><name>com/ebay/EbaySdk$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="100172ce"><classId hash="268530382"><name><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></name></classId></id><coverageId>13dd8e2ec</coverageId></classHistory>
<classHistory><id hierarchicalHash="181b79149"><classId hash="2558863828"><name><name>com/ebay/EbaySdk$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6200f95e"><classId hash="1644231006"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></name></classId></id><coverageId>d86898f7</coverageId></classHistory>
<classHistory><id hierarchicalHash="6a5adef2"><classId hash="1784340210"><name><name>com/ebay/shopping/categories/models/AckCodeType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="d667f58c"><classId hash="3597137292"><name><name>com/ebay/sell/inventory/offers/models/TaxTest</name></name></classId></id><coverageId>d667f58c</coverageId></classHistory>
<classHistory><id hierarchicalHash="881b5803"><classId hash="2283493379"><name><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSizeTest</name></name></classId></id><coverageId>881b5803</coverageId></classHistory>
<classHistory><id hierarchicalHash="1fcc299b"><classId hash="533473691"><name><name>com/ebay/sell/inventory/inventoryitems/models/ProductTest</name></name></classId></id><coverageId>1fcc299b</coverageId></classHistory>
<classHistory><id hierarchicalHash="64cb3b4c"><classId hash="1691040588"><name><name>com/ebay/clients/models/EbayError</name></name></classId></id><coverageId>18dcc0be4</coverageId></classHistory>
<classHistory><id hierarchicalHash="d52b4742"><classId hash="3576383298"><name><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItemTest</name></name></classId></id><coverageId>d52b4742</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b268f7be"><classId hash="3375796297"><name><name>com/ebay/EbaySdk$CredentialsStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5a5a03d0"><classId hash="1515848656"><name><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></name></classId></id><coverageId>f4f770dd</coverageId></classHistory>
<classHistory><id hierarchicalHash="1cb3e503"><classId hash="481551619"><name><name>com/ebay/sell/account/policies/clients/ReturnPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8a229d80"><classId hash="2317524352"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/InventoryItemGroupClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab2654d"><classId hash="179463501"><name><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImplTest</name></name></classId></id><coverageId>ab2654d</coverageId></classHistory>
<classHistory><id hierarchicalHash="12b84c4bf"><classId hash="1112694090"><name><name>com/ebay/EbaySdk$ClientSecretStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b67a181c"><classId hash="664077225"><name><name>com/ebay/models/RequestRetryConfiguration$Steps</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="e8a85b0d"><classId hash="1505969818"><name><name>com/ebay/models/RequestRetryConfiguration$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="27614e46"><classId hash="660688454"><name><name>com/ebay/identity/oauth2/token/models/Token</name></name></classId></id><coverageId>419863137</coverageId></classHistory>
<classHistory><id hierarchicalHash="a02fb686"><classId hash="2243762407"><name><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></name></classId></id><coverageId>1c0a6afc6</coverageId></classHistory>
<classHistory><id hierarchicalHash="8bb1fb6d"><classId hash="2343697261"><name><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="15ed7a6ff"><classId hash="2455899300"><name><name>com/ebay/exceptions/EbayErrorResponseException</name></name></classId></id><coverageId>3a339fd16</coverageId></classHistory>
<classHistory><id hierarchicalHash="15b9af26"><classId hash="364490534"><name><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailabilityTest</name></name></classId></id><coverageId>15b9af26</coverageId></classHistory>
<classHistory><id hierarchicalHash="cc759a5b"><classId hash="3430259291"><name><name>com/ebay/exceptions/EbayException</name></name></classId></id><coverageId>3a339fd16</coverageId></classHistory>
<classHistory><id hierarchicalHash="18758da34"><classId hash="2653319871"><name><name>com/ebay/EbaySdk$SandboxStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13f8ba384"><classId hash="2963705617"><name><name>com/ebay/models/RequestRetryConfiguration$MininumWaitStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1bf11f3ca"><classId hash="3216394610"><name><name>com/ebay/sell/account/policies/models/PolicyCategoryType$Name</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="ec0c6449"><classId hash="3960235081"><name><name>com/ebay/shopping/categories/clients/impl/CategoryClientImplTest</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="375764eb"><classId hash="928474347"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroupTest</name></name></classId></id><coverageId>375764eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="14efe99f6"><classId hash="3164376402"><name><name>com/ebay/exceptions/EbayNotFoundResponseException</name></name></classId></id><coverageId>2107eb605</coverageId></classHistory>
<classHistory><id hierarchicalHash="bf7a3257"><classId hash="3212456535"><name><name>com/ebay/sell/inventory/inventoryitems/models/DimensionTest</name></name></classId></id><coverageId>bf7a3257</coverageId></classHistory>
<classHistory><id hierarchicalHash="3828ee47"><classId hash="942206535"><name><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></name></classId></id><coverageId>15d469f45</coverageId></classHistory>
<classHistory><id hierarchicalHash="218ce73d"><classId hash="562882365"><name><name>com/ebay/sell/account/policies/clients/PaymentPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bd956db0"><classId hash="2736967697"><name><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></name></classId></id><coverageId>f2cdb628</coverageId></classHistory>
<classHistory><id hierarchicalHash="45417868"><classId hash="1161918568"><name><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="35c73832"><classId hash="902248498"><name><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></name></classId></id><coverageId>21b885bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="f1cf8e69"><classId hash="4056911465"><name><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImplTest</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="1198ddf82"><classId hash="4279976419"><name><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></name></classId></id><coverageId>14b9b03c3</coverageId></classHistory>
<classHistory><id hierarchicalHash="69d00dbb"><classId hash="1775242683"><name><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="20ca8d44"><classId hash="550145348"><name><name>com/ebay/sell/inventory/locations/clients/InventoryLocationClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="60d2d734"><classId hash="1180711317"><name><name>com/ebay/clients/impl/EbayClientImpl$1</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="43a46817"><classId hash="691128952"><name><name>com/ebay/clients/impl/EbayClientImpl$2</name></name></classId></id><coverageId>113881428</coverageId></classHistory>
<classHistory><id hierarchicalHash="6dca5bc8"><classId hash="1398259241"><name><name>com/ebay/clients/impl/EbayClientImpl$3</name></name></classId></id><coverageId>1eec63046</coverageId></classHistory>
<classHistory><id hierarchicalHash="222ecd6a"><classId hash="129773515"><name><name>com/ebay/clients/impl/EbayClientImpl$4</name></name></classId></id><coverageId>11eaf279c</coverageId></classHistory>
<classHistory><id hierarchicalHash="3470fb9f"><classId hash="879819679"><name><name>com/ebay/sell/inventory/offers/models/Tax</name></name></classId></id><coverageId>15220166b</coverageId></classHistory>
<classHistory><id hierarchicalHash="7a85d35a"><classId hash="2055590746"><name><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImplTest</name></name></classId></id><coverageId>7a85d35a</coverageId></classHistory>
<classHistory><id hierarchicalHash="362205c9"><classId hash="464480298"><name><name>com/ebay/clients/impl/EbayClientImpl$5</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="106a36f3f"><classId hash="2008963788"><name><name>com/ebay/models/RequestRetryConfiguration$BuildStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19856c3e"><classId hash="428174398"><name><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="abd1f88f"><classId hash="2882664591"><name><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="21b885bf"><classId hash="565740991"><name><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImplTest</name></name></classId></id><coverageId>21b885bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="3ec018a1"><classId hash="1052776609"><name><name>com/ebay/sell/inventory/inventoryitems/models/WeightTest</name></name></classId></id><coverageId>3ec018a1</coverageId></classHistory>
<classHistory><id hierarchicalHash="241b3764"><classId hash="162044357"><name><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></name></classId></id><coverageId>1c2e4bed2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a5d322bb"><classId hash="3164650310"><name><name>com/ebay/EbaySdk$Steps</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="943b9db1"><classId hash="2486934961"><name><name>com/ebay/sell/inventory/offers/models/Amount</name></name></classId></id><coverageId>21ff5168a</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b44e77a"><classId hash="994371450"><name><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></name></classId></id><coverageId>21cc0d19c</coverageId></classHistory>
<classHistory><id hierarchicalHash="f410a70e"><classId hash="4094732046"><name><name>com/ebay/sell/inventory/offers/models/Listing</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="c85a47a"><classId hash="210084986"><name><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></name></classId></id><coverageId>1c17979a1</coverageId></classHistory>
<classHistory><id hierarchicalHash="4057d7e8"><classId hash="1079498728"><name><name>com/ebay/clients/models/ErrorResponse</name></name></classId></id><coverageId>2b72d98cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="1241aba63"><classId hash="988304110"><name><name>com/ebay/EbaySdk$ShoppingUriStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ec4e325f"><classId hash="3964547679"><name><name>com/ebay/sell/inventory/inventoryitems/models/AvailabilityTest</name></name></classId></id><coverageId>ec4e325f</coverageId></classHistory>
<classHistory><id hierarchicalHash="8270ce83"><classId hash="2188430979"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImplTest</name></name></classId></id><coverageId>8270ce83</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e2fbad8"><classId hash="506444504"><name><name>com/ebay/sell/inventory/offers/models/Offer</name></name></classId></id><coverageId>16d87af48</coverageId></classHistory>
<classHistory><id hierarchicalHash="e7a7a95a"><classId hash="3886524762"><name><name>com/ebay/sell/inventory/inventoryitems/clients/InventoryItemClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8fc5d7e8"><classId hash="2412107752"><name><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></name></classId></id><coverageId>1bd2194b2</coverageId></classHistory>
<classHistory><id hierarchicalHash="ff5baa58"><classId hash="4284197464"><name><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></name></classId></id><coverageId>12d3fe57c</coverageId></classHistory>
<classHistory><id hierarchicalHash="5606e279"><classId hash="999572698"><name><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></name></classId></id><coverageId>e0f8004d</coverageId></classHistory>
<classHistory><id hierarchicalHash="1116b56"><classId hash="17918806"><name><name>com/ebay/identity/oauth2/token/clients/TokenClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="44b0a491"><classId hash="1152427153"><name><name>com/ebay/shopping/categories/clients/CategoryClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d6b69f33"><classId hash="3602292531"><name><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></name></classId></id><coverageId>c6db70a4</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f1a60fa"><classId hash="1483736643"><name><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="18601985"><classId hash="408951173"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/SpecificationTest</name></name></classId></id><coverageId>18601985</coverageId></classHistory>
<classHistory><id hierarchicalHash="ed5ad554"><classId hash="3982153044"><name><name>com/ebay/sell/inventory/offers/models/AmountTest</name></name></classId></id><coverageId>ed5ad554</coverageId></classHistory>
<classHistory><id hierarchicalHash="92d68d78"><classId hash="2019815385"><name><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></name></classId></id><coverageId>15385feec</coverageId></classHistory>
<classHistory><id hierarchicalHash="43993cd1"><classId hash="1134116049"><name><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></name></classId></id><coverageId>1329a4136</coverageId></classHistory>
<classHistory><id hierarchicalHash="782f2484"><classId hash="2016355460"><name><name>com/ebay/shopping/categories/models/CategoryType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="d1153069"><classId hash="3507826793"><name><name>com/ebay/EbaySdkTest</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="c220c20d"><classId hash="3256926733"><name><name>com/ebay/sell/inventory/offers/models/ListingPoliciesTest</name></name></classId></id><coverageId>c220c20d</coverageId></classHistory>
<classHistory><id hierarchicalHash="e9326775"><classId hash="3912394613"><name><name>com/ebay/EbaySdk</name></name></classId></id><coverageId>d1153069</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5339bec"><classId hash="1716422521"><name><name>com/ebay/models/RequestRetryConfiguration$TimeoutStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="ab28cc07"><classId hash="2871577607"><name><name>com/ebay/shopping/categories/models/SeverityCodeType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="91aabb0"><classId hash="152742832"><name><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></name></classId></id><coverageId>220c64b05</coverageId></classHistory>
<classHistory><id hierarchicalHash="b194be91"><classId hash="2535596274"><name><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></name></classId></id><coverageId>fee0c6a4</coverageId></classHistory>
<classHistory><id hierarchicalHash="ef917f5d"><classId hash="4019289949"><name><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImplTest</name></name></classId></id><coverageId>ef917f5d</coverageId></classHistory>
<classHistory><id hierarchicalHash="9d327824"><classId hash="2637330468"><name><name>com/ebay/clients/models/EbayParameter</name></name></classId></id><coverageId>9bfc7d7b</coverageId></classHistory>
<classHistory><id hierarchicalHash="e5b49264"><classId hash="3853816420"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></name></classId></id><coverageId>f0c8b27c</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ee51473"><classId hash="2397377651"><name><name>com/ebay/models/RequestRetryConfiguration</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="a111340c"><classId hash="2702259212"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesByTest</name></name></classId></id><coverageId>a111340c</coverageId></classHistory>
<classHistory><id hierarchicalHash="21c51721"><classId hash="566564641"><name><name>com/ebay/shopping/categories/models/CategoryArrayType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="21b60ee2"><classId hash="565579490"><name><name>com/ebay/identity/oauth2/token/models/UserToken</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="16c063c4"><classId hash="381707204"><name><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></name></classId></id><coverageId>7a85d35a</coverageId></classHistory>
<classHistory><id hierarchicalHash="36aa5ab7"><classId hash="917134007"><name><name>com/ebay/shopping/categories/models/AbstractResponseType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a729d9f"><classId hash="443719071"><name><name>com/ebay/clients/impl/EbayClientImpl</name></name></classId></id><coverageId>40ed3cbea</coverageId></classHistory>
<classHistory><id hierarchicalHash="27cdc213"><classId hash="667795987"><name><name>com/ebay/sell/inventory/locations/models/Location</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8849ea1d"><classId hash="2286545437"><name><name>com/ebay/shopping/categories/models/ErrorType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="8d6f3925"><classId hash="2372876581"><name><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></name></classId></id><coverageId>dbc795b6</coverageId></classHistory>
<classHistory><id hierarchicalHash="773f32e1"><classId hash="2000630497"><name><name>com/ebay/sell/inventory/offers/models/Offers</name></name></classId></id><coverageId>f1cf8e69</coverageId></classHistory>
<classHistory><id hierarchicalHash="7bb820df"><classId hash="2075664607"><name><name>com/ebay/sell/inventory/offers/models/OfferTest</name></name></classId></id><coverageId>7bb820df</coverageId></classHistory>
<classHistory><id hierarchicalHash="ee80fec4"><classId hash="4001431236"><name><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<classHistory><id hierarchicalHash="7050f522"><classId hash="1884353826"><name><name>com/ebay/sell/inventory/locations/models/Address</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9bfc7d7b"><classId hash="2617015675"><name><name>com/ebay/exceptions/EbayErrorResponseExceptionTest</name></name></classId></id><coverageId>9bfc7d7b</coverageId></classHistory>
<classHistory><id hierarchicalHash="1df3aaa2"><classId hash="502508194"><name><name>com/ebay/models/MarketplaceTest</name></name></classId></id><coverageId>1df3aaa2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1cc98ccae"><classId hash="3815138617"><name><name>com/ebay/EbaySdk$CodeStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13429dafb"><classId hash="1257730950"><name><name>com/ebay/EbaySdk$RequestRetryConfigurationStep</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7b12f12d"><classId hash="2064838957"><name><name>com/ebay/sell/account/policies/clients/FulfillmentPolicyClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="152a1303"><classId hash="355078915"><name><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></name></classId></id><coverageId>1d73328c7</coverageId></classHistory>
<classHistory><id hierarchicalHash="d8569ea9"><classId hash="3629555369"><name><name>com/ebay/models/Marketplace</name></name></classId></id><coverageId>2373ff467</coverageId></classHistory>
<classHistory><id hierarchicalHash="62fee0e6"><classId hash="1660870886"><name><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></name></classId></id><coverageId>b9c8336e</coverageId></classHistory>
<classHistory><id hierarchicalHash="95137641"><classId hash="2501080641"><name><name>com/ebay/sell/inventory/offers/clients/OfferClient</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2dcb963b"><classId hash="768316987"><name><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImplTest</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<classHistory><id hierarchicalHash="fe2cfe4"><classId hash="266522596"><name><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImplTest</name></name></classId></id><coverageId>fe2cfe4</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b29fbbb"><classId hash="992607163"><name><name>com/ebay/shopping/categories/models/ErrorParameterType</name></name></classId></id><coverageId>ec0c6449</coverageId></classHistory>
<classHistory><id hierarchicalHash="b5e56e78"><classId hash="3051712120"><name><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></name></classId></id><coverageId>2dcb963b</coverageId></classHistory>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItem</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getRefreshToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/ebay/EbaySdk$ClientIdStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/EbaySdk;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/EbaySdk;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withBaseUri</name></method><methodDesc>(Ljava/net/URI;)Lcom/ebay/EbaySdk$ShoppingUriStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withClientId</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$ClientSecretStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withClientSecret</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$CredentialsStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withCode</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$RequestRetryConfigurationStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRefreshToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$RequestRetryConfigurationStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRefreshTokenAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRequestRetryConfiguration</name></method><methodDesc>(Lcom/ebay/models/RequestRetryConfiguration;)Lcom/ebay/EbaySdk$SandboxStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withRuName</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/EbaySdk$CodeStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withShoppingUri</name></method><methodDesc>(Ljava/net/URI;)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.EbaySdkTest.givenRuNameAndAuthorizationCodeAndSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.EbaySdkTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>buildResponseRetryer</name></method><methodDesc>()Lcom/github/rholder/retry/Retryer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>buildResponseRetryer</name></method><methodDesc>()Lcom/github/rholder/retry/Retryer;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>delete</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>get</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>getUserToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidSkuWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>handleResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>invokeResponseCallable</name></method><methodDesc>(Ljava/util/concurrent/Callable;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>lambda$shouldRetryBadRequest$1</name></method><methodDesc>(Ljava/lang/Integer;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeAlreadyExistingOfferWhenCreatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>lambda$shouldRetryBadRequest$1</name></method><methodDesc>(Ljava/lang/Integer;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeAlreadyExistingOfferWhenCreatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>lambda$shouldRetryBadRequest$1</name></method><methodDesc>(Ljava/lang/Integer;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeAlreadyExistingOfferWhenCreatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>post</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Object;Ljava/lang/Class;[Ljavax/ws/rs/core/Response$Status;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>put</name></method><methodDesc>(Ljavax/ws/rs/client/WebTarget;Ljava/lang/Object;[Ljavax/ws/rs/core/Response$Status;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryBadRequest</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryBadRequest</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryBadRequest</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvlaidOffsetWhenRetrievingInventoryItemsThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryBadRequest</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryBadRequest</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl</name></clazz><method><name>shouldRetryResponse</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidSkuWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeInvalidSkuWhenRetrievingOfferThenThrowNewEbayNotFoundResponseException(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$1</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingInventoryItemThenRefreshAccessTokenAndReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$2</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemAndExpiredAccessTokenWhenCreatingInventoryLocationThenRefreshAcessTokenAndUpdateInventoryItemAndReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$3</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemAndExpiredAccessTokenWhenUpdatingInventoryItemGroupThenRefreshAcessTokenAndUpdateInventoryItemAndReturn204StatusCode(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$5</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$5</name></clazz><method><name>onRetry</name></method><methodDesc>(Lcom/github/rholder/retry/Attempt;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getDomain</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getErrorId</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayError</name></clazz><method><name>getSubdomain</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayParameter</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/EbayParameter</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvlaidOffsetWhenRetrievingInventoryItemsThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildErrors</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/util/List;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildErrors</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/util/List;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>buildMessage</name></method><methodDesc>(Ljavax/ws/rs/core/Response;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/exceptions/EbayErrorResponseException</name></clazz><method><name>getStatusCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.exceptions.EbayErrorResponseExceptionTest.givenSomeResponseWithNotFoundStatusCodeAnd25710ErrorIdWhenCreatingExceptionThenCreateExceptionWithCorrectMessageAndStatusCodeAndEbayErrors(com.ebay.exceptions.EbayErrorResponseExceptionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getAccessToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getExpiresIn</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getRefreshToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getRefreshTokenExpiresIn</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/Token</name></clazz><method><name>getTokenType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/ebay/identity/oauth2/token/clients/TokenClient;Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/oauth2/token/models/UserToken</name></clazz><method><name>refreshToken</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingInventoryItemThenRefreshAccessTokenAndReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>getAccessToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndInvalidAuthorizationCodeWhenGeneratingAccessTokenThenThrowNewEbayErrorException(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>getAccessToken</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndValidAuthorizationCodeWhenGeneratingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>postForm</name></method><methodDesc>(Ljavax/ws/rs/core/Form;)Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRuNameAndInvalidAuthorizationCodeWhenGeneratingAccessTokenThenThrowNewEbayErrorException(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>refreshAccessToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/identity/ouath2/token/clients/impl/TokenClientImpl</name></clazz><method><name>refreshAccessToken</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/identity/oauth2/token/models/Token;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest.givenValidRefreshTokenWhenRefreshingAccessTokenThenReturnToken(com.ebay.identity.ouath2.token.clients.impl.TokenClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayCaFrIdWhenRetrievingMarketplaceThenReturnCanadaFrenchMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getShoppingSiteId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenAustraliaMarketPlaceWhenRetrievingShoppingSiteIdThenReturn15(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>getSupportedLocale</name></method><methodDesc>()Ljava/util/Locale;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenUnitedStatesMarketplaceWhenRetrievingSupportedLocaleThenReturnEnUs(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>lambda$toEnum$0</name></method><methodDesc>(Ljava/lang/String;Lcom/ebay/models/Marketplace;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayCaFrIdWhenRetrievingMarketplaceThenReturnCanadaFrenchMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/models/Marketplace;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayCaFrIdWhenRetrievingMarketplaceThenReturnCanadaFrenchMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/Marketplace</name></clazz><method><name>toEnum</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/models/Marketplace;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.models.MarketplaceTest.givenEbayCaFrIdWhenRetrievingMarketplaceThenReturnCanadaFrenchMarketplace(com.ebay.models.MarketplaceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getMininumWaitDuration</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getMininumWaitUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getTimeoutDuration</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>getTimeoutUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lcom/ebay/models/RequestRetryConfiguration$MininumWaitStep;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>build</name></method><methodDesc>()Lcom/ebay/models/RequestRetryConfiguration;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>withMininumWait</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)Lcom/ebay/models/RequestRetryConfiguration$TimeoutStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/models/RequestRetryConfiguration$Steps</name></clazz><method><name>withTimeout</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)Lcom/ebay/models/RequestRetryConfiguration$BuildStep;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingFulfillmentPoliciesThenReturnFulfillmentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$5</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$5</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/FulfillmentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$5</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingPaymentPoliciesThenReturnPaymentPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/PaymentPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$3</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/PaymentPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>findDefaultPolicyForCategoryType</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Ljava/util/function/Predicate;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomeValidMarketplaceWhenRetrievingReturnPoliciesThenReturnReturnPoliciesForMarketplace(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/clients/impl/ReturnPolicyClientImpl</name></clazz><method><name>lambda$findDefaultPolicyForCategoryType$2</name></method><methodDesc>(Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;Lcom/ebay/sell/account/policies/models/ReturnPolicy;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutCategoryTypeWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithoutCategoryTypeWhenRetrievingDefaultPolicyThenThrowNewIllegalArgumentException(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getFulfillmentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/FulfillmentPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PaymentPolicy</name></clazz><method><name>getPaymentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultPaymentPolicy(com.ebay.sell.account.policies.clients.impl.PaymentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/PolicyCategoryType</name></clazz><method><name>isDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultFulfillmentPolicy(com.ebay.sell.account.policies.clients.impl.FulfillmentPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicies</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getCategoryTypes</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/account/policies/models/ReturnPolicy</name></clazz><method><name>getReturnPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest.givenSomesMarketplaceAndSomeCategoryTypeNameWithDefaultPolicyWhenRetrievingDefaultPolicyThenReturnDefaultReturnPolicy(com.ebay.sell.account.policies.clients.impl.ReturnPolicyClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>deleteInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenDeletingInventoryItemGroupThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenRetrievingInventoryItemGroupThenReturnInventoryItemGroup(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeValidInventoryItemGroupKeyWhenRetrievingInventoryItemGroupThenReturnInventoryItemGroup(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/clients/impl/InventoryItemGroupClientImpl</name></clazz><method><name>updateInventoryItemGroup</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest.givenSomeInventoryItemGroupWithInvalidTitleWhenUpdatingInventoryItemGroupThenThrowNewEbayErrorResponseException(com.ebay.sell.inventory.inventoryitemgroups.clients.impl.InventoryItemGroupClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getImageUrls</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getInventoryItemGroupKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getSubtitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getVariantSKUs</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenDifferentVariantSKUsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>getVariesBy</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitemgroups/models/VariesBy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest.givenDifferentVariantSKUsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.InventoryItemGroupTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSpecificationWithDifferentNameWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSpecificationWithDifferentNameWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSpecificationWithDifferentNameWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>getValues</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSpecificationWithSameNameAndMissingValueWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/Specification</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest.givenSpecificationWithDifferentNameWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.SpecificationTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenVariesByWithSameAspectsImageVariesByAndSameSpecificationsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>getAspectsImageVariesBy</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeVariesByWithDifferentAspectsImageVariesByAndSameSpecificationsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>getSpecifications</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeVariesBySameAspectsImageVariesByAndDifferentSpecificationsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitemgroups/models/VariesBy</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest.givenSomeVariesBySameAspectsImageVariesByAndDifferentSpecificationsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitemgroups.models.VariesByTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>deleteInventoryItem</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getInventoryItem</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeValidSkuWhenRetrievingInventoryItemThenReturnInventoryItem(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getInventoryItems</name></method><methodDesc>(II)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItems;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeLimitAndSomeOffsetWhenRetrievingInventoryItemsThenReturnInventoryItems(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInvalidSkuWhenDeletingInventoryItemThenThrowNewEbayErrorExceptionWith404StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/clients/impl/InventoryItemClientImpl</name></clazz><method><name>updateInventoryItem</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWithInvalidConditionWhenUpdatingInventoryItemThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>getShipToLocationAvailability</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenDifferentShipToLocationAvailabilityWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Availability</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest.givenDifferentShipToLocationAvailabilityWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.AvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getHeight</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getLength</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getUnit</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>getWidth</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>setHeight</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>setLength</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Dimension</name></clazz><method><name>setWidth</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.DimensionTest.givenSameFieldsWithNullValuesWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.DimensionTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenDifferentProductWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getAvailability</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Availability;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getCondition</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getConditionDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getPackageWeightAndSize</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getProduct</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Product;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenDifferentProductWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest.givenSomeInventoryItemWhenUpdatingInventoryItemThenReturn204StatusCode(com.ebay.sell.inventory.inventoryitems.clients.impl.InventoryItemClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItem</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest.givenDifferentProductWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.InventoryItemTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getHref</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getInventoryItems</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getLimit</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getNext</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/InventoryItems</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenDifferentWeightWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenDifferentWeightWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getDimensions</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Dimension;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getPackageType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>getWeight</name></method><methodDesc>()Lcom/ebay/sell/inventory/inventoryitems/models/Weight;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenDifferentWeightWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/PackageWeightAndSize</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenDifferentWeightWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getAspects</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenDifferentAspectsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getBrand</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getEan</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getImageUrls</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getIsbn</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getMpn</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getSubtitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getTitle</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>getUpc</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Product</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ProductTest.givenDifferentAspectsWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ProductTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenDifferentQuantityWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>getQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenDifferentQuantityWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/ShipToLocationAvailability</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest.givenDifferentQuantityWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.ShipToLocationAvailabilityTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenSameFieldsUpToTenDecimalsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>getUnit</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenSameFieldsWithNullValueWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.WeightTest.givenDifferentUnitWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.WeightTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/inventoryitems/models/Weight</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest.givenDifferentWeightWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.inventoryitems.models.PackageWeightAndSizeTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>deleteInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenDeletingInventoryLocationThenReturn200StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenRetrievingInventoryLocationThenReturnInventoryLocation(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeValidMerchantLocationKeyWhenRetrievingInventoryLocationThenReturnInventoryLocation(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/clients/impl/InventoryLocationClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getLocation</name></method><methodDesc>()Lcom/ebay/sell/inventory/locations/models/Location;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getMerchantLocationKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getMerchantLocationStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/InventoryLocation</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest.givenSomeInventoryItemWhenCreatingInventoryLocationThenReturn204StatusCode(com.ebay.sell.inventory.locations.clients.impl.InventoryLocationClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>createOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWhenCreatingOfferThenReturn201StatusCodeAndOfferId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getOfferBySku</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingOfferThenRefreshAccessTokenAndReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>getWebTarget</name></method><methodDesc>()Ljavax/ws/rs/client/WebTarget;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>publishOffer</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/clients/impl/OfferClientImpl</name></clazz><method><name>updateOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>getCurrency</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenDifferentValueWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenDifferentValueWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Amount</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.AmountTest.givenDifferentValueWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.AmountTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getListingId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidOfferIdWhenPublishingOfferThenReturnListingId(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getListingStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Listing</name></clazz><method><name>getSoldQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getFulfillmentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getPaymentPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>getReturnPolicyId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenDifferentReturnPolicyIdWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/ListingPolicies</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.ListingPoliciesTest.givenDifferentReturnPolicyIdWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.ListingPoliciesTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getHref</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getLimit</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getNext</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getOffers</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuAndExpiredAccessTokenWhenRetrievingOfferThenRefreshAccessTokenAndReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offers</name></clazz><method><name>getTotal</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>getPrice</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Amount;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenDifferentPriceWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/PricingSummary</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.PricingSummaryTest.givenDifferentPriceWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.PricingSummaryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSameFieldsWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>getThirdPartyTaxCategory</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>getVatPercentage</name></method><methodDesc>()Ljava/math/BigDecimal;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSameFieldsWithNullVatPercentageWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenDifferentVatPercentageWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>isApplyTax</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Tax</name></clazz><method><name>setVatPercentage</name></method><methodDesc>(Ljava/math/BigDecimal;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.TaxTest.givenSameFieldsWithNullVatPercentageWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.TaxTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAndBananaCategoryIdWhenRetrievingCategoryThenReturnNullCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryChildrenThenReturnConsumerElectronicsCategoryAndAllOfItsChildrenCategories(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryChildrenThenReturnConsumerElectronicsCategoryAndAllOfItsChildrenCategories(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isInvalidCategory</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAndBananaCategoryIdWhenRetrievingCategoryThenReturnNullCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isInvalidCategory</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isInvalidCategory</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isSuccess</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isSuccess</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>isSuccess</name></method><methodDesc>(Lcom/ebay/shopping/categories/models/GetCategoryInfoResponseType;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>lambda$isInvalidCategory$4</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>lambda$isInvalidCategory$4</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/clients/impl/CategoryClientImpl</name></clazz><method><name>lambda$isInvalidCategory$4</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdAndInvalidApplicationIdWhenRetrievingCategoryThenThrowNewEbayErrorResponseException(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getAck</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getErrors</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryArrayType</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryArrayType</name></clazz><method><name>getCategory</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryIDPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryLevel</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryNamePath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryParentID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>isLeafCategory</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd9001CategoryIdWhenRetrievingCategoryChildrenThenReturnEmptyCategoryList(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryArray</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/CategoryArrayType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.shopping.categories.clients.impl.CategoryClientImplTest.giveSomeMarketplaceAnd293CategoryIdWhenRetrievingCategoryThenReturnConsumerElectronicsCategory(com.ebay.shopping.categories.clients.impl.CategoryClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>createInventoryLocation</name></method><methodDesc>(Lcom/ebay/sell/inventory/locations/models/InventoryLocation;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>createOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryItem</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>deleteInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getCategory</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Lcom/ebay/shopping/categories/models/CategoryType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getCategoryWithChildren</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultFulfillmentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/FulfillmentPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultPaymentPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/PaymentPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getDefaultReturnPolicy</name></method><methodDesc>(Lcom/ebay/models/Marketplace;Lcom/ebay/sell/account/policies/models/PolicyCategoryType$Name;)Lcom/ebay/sell/account/policies/models/ReturnPolicy;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getFulfillmentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItemGroup</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryItems</name></method><methodDesc>(II)Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItems;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getInventoryLocation</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/locations/models/InventoryLocation;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getOffer</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getOfferBySku</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/sell/inventory/offers/models/Offer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getPaymentPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>getReturnPolicies</name></method><methodDesc>(Lcom/ebay/models/Marketplace;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>publishOffer</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateInventoryItem</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitems/models/InventoryItem;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateInventoryItemGroup</name></method><methodDesc>(Lcom/ebay/sell/inventory/inventoryitemgroups/models/InventoryItemGroup;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk</name></clazz><method><name>updateOffer</name></method><methodDesc>(Lcom/ebay/sell/inventory/offers/models/Offer;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenSameInstanceWhenTestingEqualityThenReturnTrue(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenSomeStringWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenDifferentTaxWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getAvailableQuantity</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="11" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getCategoryId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getFormat</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListing</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Listing;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListingDescription</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getListingPolicies</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/ListingPolicies;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getMarketplaceId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getMerchantLocationKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getOfferId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getPricingSummary</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/PricingSummary;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getQuantityLimitPerBuyer</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getSku</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeValidSkuWhenRetrievingOfferThenReturnOffer(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getStatus</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getStoreCategoryNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest.givenSomeOfferWithInvalidMarketPlaceIdWhenUpdatingOfferThenThrowNewEbayErrorExceptionWith400StatusCodeAndSomeEbayErrorMessage(com.ebay.sell.inventory.offers.clients.impl.OfferClientImplTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>getTax</name></method><methodDesc>()Lcom/ebay/sell/inventory/offers/models/Tax;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenDifferentTaxWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/offers/models/Offer</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.ebay.sell.inventory.offers.models.OfferTest.givenDifferentTaxWhenTestingEqualityThenReturnFalse(com.ebay.sell.inventory.offers.models.OfferTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getAddressLine1</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getAddressLine2</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCity</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCountry</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getCounty</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getPostalCode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Address</name></clazz><method><name>getStateOrProvince</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorClassification</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getErrorParameters</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getLongMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getSeverityCode</name></method><methodDesc>()Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>getShortMessage</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorType</name></clazz><method><name>isUserDisplayHint</name></method><methodDesc>()Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/SeverityCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/SeverityCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/ErrorClassificationCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorClassificationCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>fromValue</name></method><methodDesc>(Ljava/lang/String;)Lcom/ebay/shopping/categories/models/AckCodeType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AckCodeType</name></clazz><method><name>value</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getBuild</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getCorrelationID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getTimestamp</name></method><methodDesc>()Ljavax/xml/datatype/XMLGregorianCalendar;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/AbstractResponseType</name></clazz><method><name>getVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryCount</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getCategoryVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/GetCategoryInfoResponseType</name></clazz><method><name>getUpdateTime</name></method><methodDesc>()Ljavax/xml/datatype/XMLGregorianCalendar;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withSandbox</name></method><methodDesc>(Z)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/EbaySdk$Steps</name></clazz><method><name>withSandbox</name></method><methodDesc>(Z)Lcom/ebay/EbaySdk$BuildStep;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getCategoryParentName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/CategoryType</name></clazz><method><name>getItemCount</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorParameterType</name></clazz><method><name>getParamID</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/shopping/categories/models/ErrorParameterType</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>hasErrors</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/models/ErrorResponse</name></clazz><method><name>hasErrors</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/sell/inventory/locations/models/Location</name></clazz><method><name>getAddress</name></method><methodDesc>()Lcom/ebay/sell/inventory/locations/models/Address;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/ebay/clients/impl/EbayClientImpl$4</name></clazz><method><name>call</name></method><methodDesc>()Ljavax/ws/rs/core/Response;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
